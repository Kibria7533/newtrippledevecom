[{"E:\\trippldevecom\\client\\src\\index.js":"1","E:\\trippldevecom\\client\\src\\reportWebVitals.js":"2","E:\\trippldevecom\\client\\src\\App.js":"3","E:\\trippldevecom\\client\\src\\Component\\Admin\\Admin.js":"4","E:\\trippldevecom\\client\\src\\Component\\User\\User.js":"5","E:\\trippldevecom\\client\\src\\Component\\User\\Adminlogin.js":"6","E:\\trippldevecom\\client\\src\\Component\\User\\Url.js":"7","E:\\trippldevecom\\client\\src\\Component\\User\\Userlogin.js":"8","E:\\trippldevecom\\client\\src\\Component\\User\\Userregister.js":"9","E:\\trippldevecom\\client\\src\\Component\\Admin\\Uploadproduct.js":"10","E:\\trippldevecom\\client\\src\\Component\\Admin\\Menumanage.js":"11"},{"size":502,"mtime":1611424959410,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":585,"mtime":1611144538119,"results":"15","hashOfConfig":"13"},{"size":686,"mtime":1612027377864,"results":"16","hashOfConfig":"13"},{"size":618,"mtime":1611492482619,"results":"17","hashOfConfig":"13"},{"size":3054,"mtime":1611423993450,"results":"18","hashOfConfig":"13"},{"size":61,"mtime":1611673301912,"results":"19","hashOfConfig":"13"},{"size":2937,"mtime":1611494977383,"results":"20","hashOfConfig":"13"},{"size":7637,"mtime":1611237311725,"results":"21","hashOfConfig":"13"},{"size":15965,"mtime":1611683695173,"results":"22","hashOfConfig":"13"},{"size":6054,"mtime":1612031590057,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ywe47o",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\trippldevecom\\client\\src\\index.js",[],["51","52"],"E:\\trippldevecom\\client\\src\\reportWebVitals.js",[],"E:\\trippldevecom\\client\\src\\App.js",["53"],"import React, { Component } from \"react\";\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\nimport Admin from \"./Component/Admin/Admin\";\nimport User from \"./Component/User/User\";\nimport Adminlogin from \"./Component/User/Adminlogin\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/admindashboard\" component={Admin} />\n          <Route path=\"/admin\" component={Adminlogin} />\n          <Route path=\"/\" component={User} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","E:\\trippldevecom\\client\\src\\Component\\Admin\\Admin.js",["54"],"E:\\trippldevecom\\client\\src\\Component\\User\\User.js",["55"],"import React, { Component } from \"react\";\r\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\r\nimport Userlogin from \"./Userlogin\";\r\nimport Userregister from \"./Userregister\";\r\nexport default class User extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n          <h1>User header</h1>\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/userregister\" component={Userregister} />\r\n          <Route path=\"/userlogin\" component={Userlogin} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","E:\\trippldevecom\\client\\src\\Component\\User\\Adminlogin.js",["56"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport \"./adminlogincss.css\";\r\nimport URL from \"./Url\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Adminlogin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      mesg: \"\",\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  onchange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  notify = () => toast.error(this.state.mesg);\r\n  formsubmit = async (e) => {\r\n    const { username, password } = this.state;\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\r\n        `${URL}/login-admin`,\r\n        { username, password },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Cotent-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        localStorage.setItem(\"auth\", data.data.token);\r\n        localStorage.setItem(\"userrole\", data.data.role);\r\n        localStorage.setItem(\"username\", data.data.username);\r\n        this.props.history.push(\"/admindashboard\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ee\", err.response);\r\n        this.setState({ mesg: err.response.data.messege.msg });\r\n        this.notify();\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper fadeInDown\">\r\n        <div id=\"formContent\">\r\n          {/* Tabs Titles */}\r\n          {/* Icon */}\r\n          <div className=\"fadeIn first\"></div>\r\n          {/* Login Form */}\r\n          <form onSubmit={this.formsubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"login\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.onchange}\r\n              className=\"fadeIn second\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.onchange}\r\n              className=\"fadeIn third\"\r\n              placeholder=\"password\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"fadeIn fourth\"\r\n              defaultValue=\"Log In\"\r\n            />\r\n          </form>\r\n          <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n\r\n          <ToastContainer />\r\n          {/* Remind Passowrd */}\r\n          <div id=\"formFooter\">\r\n            <a className=\"underlineHover\" href=\"#\">\r\n              Forgot Password?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Adminlogin);\r\n","E:\\trippldevecom\\client\\src\\Component\\User\\Url.js",[],"E:\\trippldevecom\\client\\src\\Component\\User\\Userlogin.js",[],"E:\\trippldevecom\\client\\src\\Component\\User\\Userregister.js",[],"E:\\trippldevecom\\client\\src\\Component\\Admin\\Uploadproduct.js",["57"],"import React, { Component } from \"react\";\r\nimport CKEditor from \"react-ckeditor-component\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport URL from \"../User/Url\";\r\nexport default class Uploadproduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      sub: [],\r\n      data: [],\r\n      brands: [{ name: \"Apple\" }, { name: \"Iphone\" }, { name: \"Shaomi\" }],\r\n      Images: [],\r\n      title: \"\",\r\n      skunumber: \"\",\r\n      description: \"\",\r\n      price: \"\",\r\n      quantity: \"\",\r\n      weaight: \"\",\r\n      category: \"\",\r\n      subcategory: \"\",\r\n      brand: \"\",\r\n      discount: \"\",\r\n      stock: \"\",\r\n      shippingdetails: \"\",\r\n      manufacturesdetails: \"\",\r\n      selectedsize: [],\r\n      feature: false,\r\n      trend: false,\r\n      available: [{ name: \"L\" }, { name: \"X\" }, { name: \"M\" }],\r\n      image: \"\",\r\n    };\r\n  }\r\n\r\n  // onDrop = (files) => {\r\n  //   console.log(files[0]);\r\n\r\n  //   let formData = new FormData();\r\n  //   const config = {\r\n  //     header: { \"content-type\": \"multipart/form-data\" },\r\n  //   };\r\n  //   formData.append(\"file\", files[0]);\r\n  //   //save the Image we chose inside the Node Server\r\n  //   axios\r\n  //     .post(`${URL}/uploadImage`, formData, config)\r\n  //     .then((response) => {\r\n  //       if (response.data.success) {\r\n  //         this.setState({\r\n  //           Images: [...this.state.Images, response.data.image],\r\n  //         });\r\n  //       } else {\r\n  //         alert(\"Failed to save the Image in Server\");\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"hi\");\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n  updateContent(newContent) {\r\n    this.setState({\r\n      content: newContent,\r\n    });\r\n  }\r\n  onChangedes = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      description: newContent,\r\n    });\r\n  };\r\n\r\n  onChangeship = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      shippingdetails: newContent,\r\n    });\r\n  };\r\n\r\n  onChangemanu = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      manufacturesdetails: newContent,\r\n    });\r\n  };\r\n\r\n  onBlur(evt) {\r\n    console.log(\"onBlur event called with event info: \", evt);\r\n  }\r\n\r\n  afterPaste(evt) {\r\n    console.log(\"afterPaste event called with event info: \", evt);\r\n  }\r\n  onDelete = (image) => {\r\n    const currentIndex = this.state.Images.indexOf(image);\r\n\r\n    let newImages = [...this.state.Images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    this.setState({ Images: newImages });\r\n  };\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(`${URL}/getmenus`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((data) => {\r\n        this.setState({ data: data.data });\r\n        const category = data.data.map((item) => {\r\n          return { name: item.CategoryName };\r\n        });\r\n\r\n        this.setState({ options: category });\r\n      });\r\n  }\r\n\r\n  brand = (selectedList, selectedItem) => {\r\n    this.setState({ brand: selectedItem.name });\r\n  };\r\n\r\n  onSelect = (selectedList, selectedItem) => {\r\n    this.setState({ selectedsize: selectedList });\r\n  };\r\n\r\n  onChangeHandler = async (event) => {\r\n    // console.log(event.target.files[0]);\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.target.files[0]);\r\n\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n\r\n    await axios\r\n      .post(`${URL}/uploadImage`, formData, config)\r\n      .then((response) => {\r\n        console.log(\"kk\", response);\r\n        if (response.data.success) {\r\n          this.setState({\r\n            Images: [...this.state.Images, response.data.image],\r\n          });\r\n        } else {\r\n          alert(\"Failed to save the Image in Server\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"hi\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  Change = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  trend = (e) => {\r\n    this.setState({ trend: !this.state.trend });\r\n  };\r\n  feature = () => {\r\n    this.setState({ feature: !this.state.feature });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      title,\r\n      Images,\r\n      skunumber,\r\n      description,\r\n      price,\r\n      quantity,\r\n      weaight,\r\n      category,\r\n      subcategory,\r\n      brand,\r\n      discount,\r\n      stock,\r\n      shippingdetails,\r\n      manufacturesdetails,\r\n      selectedsize,\r\n      feature,\r\n      trend,\r\n    } = this.state;\r\n    axios\r\n      .post(\r\n        `${URL}/uploadProduct`,\r\n        {\r\n          title,\r\n          Images,\r\n          skunumber,\r\n          description,\r\n          price,\r\n          quantity,\r\n          weaight,\r\n          category,\r\n          subcategory,\r\n          brand,\r\n          discount,\r\n          stock,\r\n          shippingdetails,\r\n          manufacturesdetails,\r\n          selectedsize,\r\n          feature,\r\n          trend,\r\n        },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"Successfully uploaded\");\r\n        } else {\r\n          alert(\"Faild to upload\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          {/* <Dropzone onDrop={this.onDrop} multiple={false} maxSize={800000000}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div\r\n                style={{\r\n                  width: \"300px\",\r\n                  height: \"240px\",\r\n                  border: \"1px solid lightgray\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                {...getRootProps()}\r\n              >\r\n                {console.log(\"getRootProps\", { ...getRootProps() })}\r\n                {console.log(\"getInputProps\", { ...getInputProps() })}\r\n                <input {...getInputProps()} />\r\n                <i className=\"fa fa-plus\" style={{ fontSize: \"3rem\" }}></i>\r\n                <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\r\n              </div>\r\n            )}\r\n          </Dropzone> */}\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"350px\",\r\n              height: \"240px\",\r\n              overflowX: \"scroll\",\r\n            }}\r\n          >\r\n            {this.state.Images.map((image, index) => (\r\n              <div onClick={() => this.onDelete(image)}>\r\n                <img\r\n                  style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n                  src={`http://localhost:5000/${image}`}\r\n                  alt={`productImg-${index}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* {this.state.Images.map((image, index) => (\r\n          <div onClick={() => this.onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`/${image}`}\r\n              alt={`productImg-${index}`}\r\n            />\r\n          </div>\r\n        ))} */}\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Image</label>\r\n\r\n            <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={this.Change}\r\n              value={this.state.title}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">SKU Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"skunumber\"\r\n              onChange={this.Change}\r\n              value={this.state.skunumber}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Discription</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.description}\r\n              value={this.state.description}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangedes,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Price</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"price\"\r\n              onChange={this.Change}\r\n              value={this.state.price}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Price\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Quantity</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"quantity\"\r\n              onChange={this.Change}\r\n              value={this.state.quantity}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Quantity\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Weaight</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"weaight\"\r\n              onChange={this.Change}\r\n              value={this.state.weaight}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Quantity\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Category</label>\r\n            <Multiselect\r\n              options={this.state.options} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.category} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              singleSelect=\"true\"\r\n            />\r\n          </div>\r\n          {this.state.sub.length > 0 && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputEmail1\">Select Sub Category</label>\r\n              <Multiselect\r\n                options={this.state.sub} // Options to display in the dropdown\r\n                selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n                onSelect={this.subcategory} // Function will trigger on select event\r\n                onRemove={this.onRemove} // Function will trigger on remove event\r\n                displayValue=\"name\" // Property name to display in the dropdown options\r\n                singleSelect=\"true\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Brand</label>\r\n            <Multiselect\r\n              options={this.state.brands} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.brand} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              singleSelect=\"true\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Discount</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"discount\"\r\n              onChange={this.Change}\r\n              value={this.state.discount}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Discount\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Stock</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"stock\"\r\n              onChange={this.Change}\r\n              value={this.state.stock}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Stock\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Shipping DEtails</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.shippingdetails}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangeship,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Manufactures DEtails</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.manufacturesdetails}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangemanu,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select availabel Size</label>\r\n            <Multiselect\r\n              options={this.state.available} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedsize} // Preselected value to persist in dropdown\r\n              onSelect={this.onSelect} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"featured\"\r\n              onChange={this.feature}\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Is Feature?\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"trend\"\r\n              onChange={this.trend}\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Is Trend?\r\n            </label>\r\n          </div>\r\n\r\n          <div></div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\trippldevecom\\client\\src\\Component\\Admin\\Menumanage.js",["58","59","60","61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":33,"nodeType":"68","messageId":"69","endLine":2,"endColumn":39},{"ruleId":"66","severity":1,"message":"67","line":3,"column":33,"nodeType":"68","messageId":"69","endLine":3,"endColumn":39},{"ruleId":"66","severity":1,"message":"67","line":2,"column":33,"nodeType":"68","messageId":"69","endLine":2,"endColumn":39},{"ruleId":"70","severity":1,"message":"71","line":98,"column":13,"nodeType":"72","endLine":98,"endColumn":52},{"ruleId":"66","severity":1,"message":"73","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":154,"column":51,"nodeType":"76","messageId":"77","endLine":154,"endColumn":53},{"ruleId":"78","severity":1,"message":"79","line":155,"column":31,"nodeType":"80","messageId":"81","endLine":155,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":180,"column":51,"nodeType":"76","messageId":"77","endLine":180,"endColumn":53},{"ruleId":"78","severity":1,"message":"79","line":181,"column":31,"nodeType":"80","messageId":"81","endLine":181,"endColumn":33},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropzone' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]